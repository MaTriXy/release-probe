version: 2.0

# Docker configs
android_config: &android_config
  working_directory: ~/release-probe
  docker:
      - image: ychescale9/android-sdk:1.0
  environment:
    _JAVA_OPTIONS: "-Xmx2g -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2g" -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false'
    TERM: dumb

gcloud_config: &gcloud_config
  working_directory: ~/release-probe
  docker:
    - image: google/cloud-sdk:latest
  environment:
    TERM: dumb

# Cache
save_gradle_cache: &save_gradle_cache
  save_cache:
    key: $CACHE_VERSION-gradle-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
    paths:
      - ~/.gradle

restore_gradle_cache: &restore_gradle_cache
  restore_cache:
    key: jars-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

# Workspace
attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/release-probe

persist_android_workspace: &persist_android_workspace
  persist_to_workspace:
    root: ~/release-probe
    paths:
      - app/build/outputs/apk/mock/debug
      - test_apks

# Branching filters
master_only: &master_only
  filters:
    branches:
      only: # TODO master

jobs:
  build:
    <<: *android_config
    steps:
      - run:
          name: Setup Environment Variables
          command: |
            echo "Cache version: $CACHE_VERSION"
            echo 'export BUILD_NUMBER="$CIRCLE_BUILD_NUM"' >> $BASH_ENV
      - checkout
      - *restore_gradle_cache
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - *save_gradle_cache
      - run:
          name: Decrypt Secrets
          command: |
            openssl aes-256-cbc -md sha256 -d -in secrets/release-probe.aes -out secrets/release-probe.keystore -k $ENCRYPT_KEY
      - run:
          name: Assemble
          command: |
            ./gradlew assemble bundleProdRelease assembleAndroidTest
            mkdir -p test_apks/
            find . -type f -regex ".*/build/outputs/apk/androidTest/.*debug/.*apk" -exec cp {} test_apks/ \;
      - store_artifacts:
          path: app/build/outputs/
      - run:
          name: Cleanup Secrets
          command: rm -f secrets/release-probe.keystore
      - *persist_android_workspace

  unit_tests:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - *save_gradle_cache
      - run:
          name: Test
          command: |
            ./gradlew test
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp --parents {} ~/junit/ \;
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

  static_analysis:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - *save_gradle_cache
      - run:
          name: Android Lint
          command: ./gradlew :app:lint
      - store_artifacts:
          path: app/build/reports/lint-results.html

  instrumented_tests:
    <<: *gcloud_config
    steps:
      - *attach_workspace
      - run:
          name: Authenticate Google Cloud Account
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 -di > client-secret.json
            gcloud config set project releaseprobe
            gcloud auth activate-service-account firebase-adminsdk-l2zcp@releaseprobe.iam.gserviceaccount.com --key-file client-secret.json
            rm client-secret.json
      - run:
          name: Run Instrumented Tests on Firebase Test Lab
          command: |
            for testApkPath in test_apks/*.apk; do
              gcloud firebase test android run \
                --type instrumentation \
                --app app/build/outputs/apk/mock/debug/*.apk \
                --test $testApkPath \
                --device model=Nexus6,version=22,locale=en_AU,orientation=portrait \
                --device model=Pixel2,version=28,locale=en_AU,orientation=portrait \
                --directories-to-pull=/sdcard/ \
                --timeout 20m \
                --no-record-video \
                --no-performance-metrics
            done

  deploy_to_play:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - *save_gradle_cache
      - *attach_workspace

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          <<: *master_only
      - unit_tests:
          <<: *master_only
      - static_analysis:
          <<: *master_only
      - instrumented_tests:
          <<: *master_only
          requires:
            - build
      - deploy_to_play:
          <<: *master_only
          requires:
            - build
            - unit_tests
            - static_analysis
            - instrumented_tests
